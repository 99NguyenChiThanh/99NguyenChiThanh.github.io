/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bangAdd;

import bangmonhoc.bangMH;
//da chinh sua 2121
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author lebao
 */
public class bangMonHocPanek extends javax.swing.JPanel {

    /**
     * Creates new form bangMonHocPanek
     */
    public bangMonHocPanek() {

        initComponents();
        KetnoiCSDL();
        HienthiCSDL();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bmh = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtMamh = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtTenmh = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtSotc = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();

        bmh.setLayout(new javax.swing.BoxLayout(bmh, javax.swing.BoxLayout.Y_AXIS));

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.Y_AXIS));

        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel1.setText("Mã Môn Học:");
        jPanel6.add(jLabel1);

        txtMamh.setPreferredSize(new java.awt.Dimension(150, 22));
        txtMamh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMamhActionPerformed(evt);
            }
        });
        jPanel6.add(txtMamh);

        jPanel4.add(jPanel6);

        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel2.setText("Tên Môn Học:");
        jPanel7.add(jLabel2);

        txtTenmh.setPreferredSize(new java.awt.Dimension(150, 22));
        txtTenmh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenmhActionPerformed(evt);
            }
        });
        jPanel7.add(txtTenmh);

        jPanel4.add(jPanel7);

        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel3.setText("Số Tín Chỉ:");
        jPanel8.add(jLabel3);

        txtSotc.setPreferredSize(new java.awt.Dimension(150, 22));
        txtSotc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSotcActionPerformed(evt);
            }
        });
        jPanel8.add(txtSotc);

        jPanel4.add(jPanel8);

        jPanel1.add(jPanel4);

        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel2.add(btnThem);

        btnLuu.setText("Lưu");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });
        jPanel2.add(btnLuu);

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel2.add(btnXoa);

        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });
        jPanel2.add(btnThoat);

        jPanel1.add(jPanel2);

        bmh.add(jPanel1);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jPanel3.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        bmh.add(jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bmh, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bmh, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        // TODO add your handling code here:
        if (KTmamh(txtMamh.getText())) { //ktra ma mh trung
            int rett = JOptionPane.showConfirmDialog(this, "Mã  môn học này đã bị trùng ,Bạn có muốn cập nhật lại nó không?", "Thông Báo Lưu", JOptionPane.YES_NO_OPTION);
            if (rett == JOptionPane.NO_OPTION) {
                return;
            }
            if (KTma(txtMamh.getText(), txtTenmh.getText())) {//ktra mamh đó và tenmh có đúng
                try {
                    String sqlupdate = "update monhoc set sotc=" + String.valueOf(txtSotc.getText()) + "  where mamh='" + txtMamh.getText() + "' and tenmh=N'" + txtTenmh.getText() + "'";
                    int x = statement.executeUpdate(sqlupdate);
                    if (x >= 1) {
                        removeAllListandShow();
                    }
                } catch (Exception e) {
                }
            }
            if (ktraTenMH(txtTenmh.getText())) {
                JOptionPane.showMessageDialog(this, "Thông báo tênmh bạn nhập bị trùng, vui lòng nhập lại không trùng tênmh", "Thông báo", JOptionPane.OK_OPTION);
            }
            //mã đúng mà tên không trùng
            try {
                String sqlupdate = "update monhoc set tenmh=N'" + txtTenmh.getText() + "',sotc=" + String.valueOf(txtSotc.getText()) + "  where mamh='" + txtMamh.getText() + "' ";
                int x = statement.executeUpdate(sqlupdate);
                if (x >= 1) {
                    removeAllListandShow();
                }
            } catch (Exception e) {
            }

        } else {
            if (ktraTenMH(txtTenmh.getText())) {
                return;
            }
            try {
                String sqlinsertt = "insert into monhoc values ('" + txtMamh.getText() + "',N'" + txtTenmh.getText() + "'," + Integer.valueOf(txtSotc.getText()) + ") ";
                int x = statement.executeUpdate(sqlinsertt);
            } catch (Exception e) {

            }
        }


    }//GEN-LAST:event_btnLuuActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        // TODO add your handling code here:
        int n = JOptionPane.showConfirmDialog(this, "Bạn có muốn thoát", "Thông báo", JOptionPane.YES_NO_OPTION);
        if (n == JOptionPane.NO_OPTION) {
            return;
        }
        System.exit(0);
    }//GEN-LAST:event_btnThoatActionPerformed

    private void txtTenmhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenmhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenmhActionPerformed

    private void txtSotcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSotcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSotcActionPerformed

    private void txtMamhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMamhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMamhActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
        try {
            String tmp = (String) jList1.getSelectedValue();
            txtMamh.setText(bangmh[jList1.getSelectedIndex()].getMamh());
            txtTenmh.setText(bangmh[jList1.getSelectedIndex()].getTenmh());
            txtSotc.setText(String.valueOf(bangmh[jList1.getSelectedIndex()].getSotc()));
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jList1MouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        txtTenmh.setText("");
        txtMamh.setText("");
        txtSotc.setText("");
        txtMamh.requestFocus();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:

        if (ktraTenMH(txtTenmh.getText())) {
            int ret = JOptionPane.showConfirmDialog(null, "Mã[" + txtMamh.getText() + "] Bạn có muốn xóa", "", JOptionPane.YES_NO_OPTION);
            if (ret == JOptionPane.NO_OPTION) {
                return;
            }
            try {
                String sql1 = "delete from ketqua where mamh='" + txtMamh.getText() + "'";
                String sql2 = "delete from monhoc where mamh = '" + txtMamh.getText() + "'";
                int x = statement.executeUpdate(sql1);
                int y = statement.executeUpdate(sql2);

                if (x >= 1 || y >= 1) {
                    System.out.println(" Xóa khách hàng thành công");
                    removeAllListandShow();
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed
    public void removeAllListandShow() {
        dsbangMonHoc.removeAll(dsbangMonHoc);
        jList1.removeAll();
        HienthiCSDL();
    }

    public boolean ktraTenMH(String tenmh) {
        try {
            String sqlSelect = "Select * from monhoc where  tenmh=N'" + tenmh + "' ";
            ResultSet re = statement.executeQuery(sqlSelect);

            if (re.next()) {
                return true;
            } else {
                return false;
            }

        } catch (Exception e) {
        }
        return false;
    }

    public boolean KTmamh(String ma) {
        try {
            String sqlSelect = "Select * from monhoc where  mamh='" + ma + "'  ";
            ResultSet re = statement.executeQuery(sqlSelect);

            if (re.next()) {
                return true;
            } else {
                return false;
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return false;
    }

    public boolean KTma(String ma, String tenmh) {
        try {
            String sqlSelect = "Select * from monhoc where  mamh='" + ma + "' and tenmh=N'" + txtTenmh.getText() + "' ";
            ResultSet re = statement.executeQuery(sqlSelect);

            if (re.next()) {
                return true;
            } else {
                return false;
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return false;
    }

    void HienthiCSDL() {

        selectvalueindexjlist = 0;
        try {

            String sql = "select * from monhoc";
            result = statement.executeQuery(sql);
            model = new DefaultListModel();
            while (result.next()) {

                String maMH = result.getString(1);
                String tenMH = result.getString(2);
                int sotc = result.getInt(3);
                bangmh[selectvalueindexjlist] = new bangMH(maMH, tenMH, sotc);
                bangmh[selectvalueindexjlist].in();

                ThemMonHoc(bangmh[selectvalueindexjlist]);
                selectvalueindexjlist++;
                Vector<Object> vec = new Vector<Object>();
                vec.add(maMH);
                vec.add(tenMH);
                vec.add(sotc);
                model.addElement(" " + vec);

                jList1.setModel(model);
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }

    private void KetnoiCSDL() {
        String strServer = "TOSHIBA-C855";
        String strDatebase = "QLSV";
        try {

            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String connectionURL = "jdbc:sqlserver://" + strServer + ":1433;databaseName=" + strDatebase
                    + ";integratedSecurity = true";
            con = DriverManager.getConnection(connectionURL);
            statement = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);

        } catch (SQLException ex1) {
            System.out.println("SQL Exception:" + ex1.toString());

        } catch (ClassNotFoundException ex2) {
            System.out.println(" Class Not Found Exception:" + ex2.toString());

        }
    }

    List<bangMH> dsbangMonHoc = new ArrayList<bangMH>();

    public void ThemMonHoc(bangMH mh) {
        //this(phòng ban) sẽ lấy danh sách nhân viên và thêm nhân viên vào
        this.dsbangMonHoc.add(mh);
    }
    private bangMH bangmh[] = new bangMH[1000];
    private int selectvalueindexjlist;
    private DefaultListModel model;
    private Connection con = null;
    private Statement statement = null;
    private ResultSet result;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel bmh;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtMamh;
    private javax.swing.JTextField txtSotc;
    private javax.swing.JTextField txtTenmh;
    // End of variables declaration//GEN-END:variables
}
